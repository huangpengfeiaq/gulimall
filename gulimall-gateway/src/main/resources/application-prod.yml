server:
  port: 8080
spring:
  application:
    name: gulimall-gateway # 服务名称
  profiles:
    active: dev #开发环境，这里是dev
  #服务追踪
  zipkin:
    base-url: http://zipkin-service.gulimall:9411/
    discovery-client-enabled: false # 关闭服务发现，否则 Spring Cloud 会把 zipkin 的 url 当做服务名称
    sender:
      type: web # 设置使用 http 的方式传输数据
  #配置采样器
  sleuth:
    sampler:
      probability: 1 # 设置抽样采集率为 100%，默认为 0.1，即 10%
  cloud:
    nacos:
      server-addr: nacos-service.gulimall:8848
      config:
        server-addr: nacos-service.gulimall:8848
        file-extension: yaml # 文件后缀名
        namespace: gateway
    #        group: 1111
    sentinel:
      transport:
        #配置sentinel dashboard地址
        dashboard: sentinel-service.gulimall:8333
    gateway:
      routes: # 网关路由配置
        # 仓储服务
        - id: ware_route
          uri: lb://gulimall-ware
          predicates:
            - Path=/api/ware/**
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}
        # 会员服务
        - id: member_route
          uri: lb://gulimall-member
          predicates:
            - Path=/api/member/**
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}
        # 商品服务
        - id: product_route
          uri: lb://gulimall-product
          predicates:
            - Path=/api/product/**,/hello
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}
        # 优惠服务
        - id: coupon_route
          uri: lb://gulimall-coupon
          predicates:
            - Path=/api/coupon/**
          filters:
            - RewritePath=/api/(?<segment>/?.*),/$\{segment}

        # 第三方服务
        - id: third_party_route
          uri: lb://gulimall-third-party
          predicates:
            - Path=/api/thirdparty/**
          filters:
            - RewritePath=/api/thirdparty/(?<segment>.*),/$\{segment}
        # 前端项目，/api前缀
        - id: admin_route # 路由id，自定义，只要唯一即可
          uri: lb://renren-fast # 路由的目标地址 (lb就是负载均衡，后面跟服务名称 / http就是固定地址)
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/api/** # 这个是按照路径匹配，只要以/api/开头就符合要求
          filters:
            - RewritePath=/api/(?<segment>.*),/renren-fast/$\{segment}
        # 主机nginx
        - id: gulimall_host_route
          uri: lb://gulimall-product
          predicates:
            - Host=gulimall.com,item.gulimall.com
        # 主机nginx-search
        - id: gulimall_search_route
          uri: lb://gulimall-search
          predicates:
            - Host=search.gulimall.com

        - id: gulimall_auth_route
          uri: lb://gulimall-auth-server
          predicates:
            - Host=auth.gulimall.com

        - id: gulimall_cart_route
          uri: lb://gulimall-cart
          predicates:
            - Host=cart.gulimall.com

        - id: gulimall_order_route
          uri: lb://gulimall-order
          predicates:
            - Host=order.gulimall.com

        - id: gulimall_member_route
          uri: lb://gulimall-member
          predicates:
            - Host=member.gulimall.com

        - id: gulimall_seckill_route
          uri: lb://gulimall-seckill
          predicates:
            - Host=seckill.gulimall.com
      #      default-filters: # 默认过滤器，会对所有的路由请求都生效
      #        - AddRequestHeader=Truth, Itcast is freaking awesome! # 添加请求头
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:8001"
              - "http://order.gulimall.com"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期

#暴露所有端点
management:
  endpoints:
    web:
      exposure:
        include: '*'