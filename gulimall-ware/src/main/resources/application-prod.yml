server:
  port: 8080
spring:
  application:
    name: gulimall-ware # 服务名称
  profiles:
    active: dev #开发环境，这里是dev
  cloud:
    nacos:
      server-addr: nacos-service.gulimall:8848
      config:
        server-addr: nacos-service.gulimall:8848
        file-extension: yaml # 文件后缀名
        namespace: ware
    sentinel:
      transport:
        #配置sentinel dashboard地址
        dashboard: sentinel-service.gulimall:8333
  #服务追踪
  zipkin:
    base-url: http://zipkin-service.gulimall:9411/
    discovery-client-enabled: false # 关闭服务发现，否则 Spring Cloud 会把 zipkin 的 url 当做服务名称
    sender:
      type: web # 设置使用 http 的方式传输数据
  #配置采样器
  sleuth:
    sampler:
      probability: 1 # 设置抽样采集率为 100%，默认为 0.1，即 10%
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql-master.gulimall:3306/gulimall_wms?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
  # RabbitMQ配置
  rabbitmq:
    host: rabbitmq-management.gulimall
    port: 5672
    # 虚拟主机配置
    virtual-host: /
    # 开启发送端消息抵达Broker确认
    publisher-confirm-type: correlated
    # 开启发送端消息抵达Queue确认
    publisher-returns: true
    # 只要消息抵达Queue，就会异步发送优先回调returnFirm
    template:
      mandatory: true
    # 手动ack消息，不使用默认的消费端确认
    listener:
      simple:
        acknowledge-mode: manual

mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  global-config:
    db-config:
      id-type: auto

logging:
  level:
    com.hpf.gulimall: debug

#暴露所有端点
management:
  endpoints:
    web:
      exposure:
        include: '*'